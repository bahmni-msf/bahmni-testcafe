"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.screen = exports.findAllByTestId = exports.findByTestId = exports.queryAllByTestId = exports.queryByTestId = exports.getAllByTestId = exports.getByTestId = exports.findAllByDisplayValue = exports.findAllByRole = exports.findByRole = exports.queryAllByRole = exports.queryByRole = exports.getAllByRole = exports.getByRole = exports.findByDisplayValue = exports.queryAllByDisplayValue = exports.queryByDisplayValue = exports.getAllByDisplayValue = exports.getByDisplayValue = exports.findAllByTitle = exports.findByTitle = exports.queryAllByTitle = exports.queryByTitle = exports.getAllByTitle = exports.getByTitle = exports.findAllByAltText = exports.findByAltText = exports.queryAllByAltText = exports.queryByAltText = exports.getAllByAltText = exports.getByAltText = exports.findAllByText = exports.findByText = exports.queryAllByText = exports.queryByText = exports.getAllByText = exports.getByText = exports.findAllByPlaceholderText = exports.findByPlaceholderText = exports.queryAllByPlaceholderText = exports.queryByPlaceholderText = exports.getAllByPlaceholderText = exports.getByPlaceholderText = exports.findAllByLabelText = exports.findByLabelText = exports.queryAllByLabelText = exports.queryByLabelText = exports.getAllByLabelText = exports.getByLabelText = exports.within = exports.configure = exports.configureOnce = void 0;
const testcafe_1 = require("testcafe");
const dom_1 = require("@testing-library/dom");
const SELECTOR_TYPE = testcafe_1.Selector("")().constructor.name;
const withinSelectors = Object.keys(dom_1.queries).reduce((acc, withinQueryName) => {
    return {
        ...acc,
        [withinQueryName]: new Function(`
    const els = arguments[0];
    if(els.length > 1) {
      throw new Error("within() only works with a single element, found " + els.length);
    }
    const el = els[0];
    const args = Array.from(arguments).slice(1);
    return window.TestingLibraryDom.within(el).${withinQueryName}.apply(null, args);
  `),
    };
}, {});
async function configureOnce(options) {
    const { content } = configure(options);
    // @ts-ignore
    await testcafe_1.ClientFunction(new Function(content))();
}
exports.configureOnce = configureOnce;
function configure(options) {
    const configFunction = `
  window.TestingLibraryDom.configure(${JSON.stringify(options)});
`;
    return { content: configFunction };
}
exports.configure = configure;
function within(sel) {
    if (sel instanceof Function) {
        return within(sel());
    }
    if (isSelector(sel)) {
        // @ts-ignore
        return sel.addCustomMethods(withinSelectors, { returnDOMNodes: true });
    }
    else if (typeof sel === "string") {
        return within(testcafe_1.Selector(sel));
    }
    else {
        throw new Error(`"within" only accepts a query (getBy, queryBy, etc), string or testcafe Selector`);
    }
}
exports.within = within;
function isSelector(sel) {
    return sel.constructor.name === SELECTOR_TYPE;
}
const bindFunction = (queryName) => {
    const query = queryName.replace("find", "query");
    return testcafe_1.Selector((matcher, ...options) => {
        return window.TestingLibraryDom[query](document.body, matcher, ...options);
    }, {
        dependencies: { query },
    });
};
exports.getByLabelText = bindFunction("getByLabelText");
exports.getAllByLabelText = bindFunction("getAllByLabelText");
exports.queryByLabelText = bindFunction("queryByLabelText");
exports.queryAllByLabelText = bindFunction("queryAllByLabelText");
exports.findByLabelText = bindFunction("findByLabelText");
exports.findAllByLabelText = bindFunction("findAllByLabelText");
exports.getByPlaceholderText = bindFunction("getByPlaceholderText");
exports.getAllByPlaceholderText = bindFunction("getAllByPlaceholderText");
exports.queryByPlaceholderText = bindFunction("queryByPlaceholderText");
exports.queryAllByPlaceholderText = bindFunction("queryAllByPlaceholderText");
exports.findByPlaceholderText = bindFunction("findByPlaceholderText");
exports.findAllByPlaceholderText = bindFunction("findAllByPlaceholderText");
exports.getByText = bindFunction("getByText");
exports.getAllByText = bindFunction("getAllByText");
exports.queryByText = bindFunction("queryByText");
exports.queryAllByText = bindFunction("queryAllByText");
exports.findByText = bindFunction("findByText");
exports.findAllByText = bindFunction("findAllByText");
exports.getByAltText = bindFunction("getByAltText");
exports.getAllByAltText = bindFunction("getAllByAltText");
exports.queryByAltText = bindFunction("queryByAltText");
exports.queryAllByAltText = bindFunction("queryAllByAltText");
exports.findByAltText = bindFunction("findByAltText");
exports.findAllByAltText = bindFunction("findAllByAltText");
exports.getByTitle = bindFunction("getByTitle");
exports.getAllByTitle = bindFunction("getAllByTitle");
exports.queryByTitle = bindFunction("queryByTitle");
exports.queryAllByTitle = bindFunction("queryAllByTitle");
exports.findByTitle = bindFunction("findByTitle");
exports.findAllByTitle = bindFunction("findAllByTitle");
exports.getByDisplayValue = bindFunction("getByDisplayValue");
exports.getAllByDisplayValue = bindFunction("getAllByDisplayValue");
exports.queryByDisplayValue = bindFunction("queryByDisplayValue");
exports.queryAllByDisplayValue = bindFunction("queryAllByDisplayValue");
exports.findByDisplayValue = bindFunction("findByDisplayValue");
exports.getByRole = bindFunction("getByRole");
exports.getAllByRole = bindFunction("getAllByRole");
exports.queryByRole = bindFunction("queryByRole");
exports.queryAllByRole = bindFunction("queryAllByRole");
exports.findByRole = bindFunction("findByRole");
exports.findAllByRole = bindFunction("findAllByRole");
exports.findAllByDisplayValue = bindFunction("findAllByDisplayValue");
exports.getByTestId = bindFunction("getByTestId");
exports.getAllByTestId = bindFunction("getAllByTestId");
exports.queryByTestId = bindFunction("queryByTestId");
exports.queryAllByTestId = bindFunction("queryAllByTestId");
exports.findByTestId = bindFunction("findByTestId");
exports.findAllByTestId = bindFunction("findAllByTestId");
exports.screen = {
    getByLabelText: exports.getByLabelText,
    getAllByLabelText: exports.getAllByLabelText,
    queryByLabelText: exports.queryByLabelText,
    queryAllByLabelText: exports.queryAllByLabelText,
    findByLabelText: exports.findByLabelText,
    findAllByLabelText: exports.findAllByLabelText,
    getByText: exports.getByText,
    getAllByText: exports.getAllByText,
    queryByText: exports.queryByText,
    queryAllByText: exports.queryAllByText,
    findByText: exports.findByText,
    findAllByText: exports.findAllByText,
    getByAltText: exports.getByAltText,
    getByPlaceholderText: exports.getByPlaceholderText,
    getAllByPlaceholderText: exports.getAllByPlaceholderText,
    queryByPlaceholderText: exports.queryByPlaceholderText,
    queryAllByPlaceholderText: exports.queryAllByPlaceholderText,
    findByPlaceholderText: exports.findByPlaceholderText,
    findAllByPlaceholderText: exports.findAllByPlaceholderText,
    getAllByAltText: exports.getAllByAltText,
    queryByAltText: exports.queryByAltText,
    queryAllByAltText: exports.queryAllByAltText,
    findByAltText: exports.findByAltText,
    findAllByAltText: exports.findAllByAltText,
    getByTitle: exports.getByTitle,
    getAllByTitle: exports.getAllByTitle,
    queryByTitle: exports.queryByTitle,
    queryAllByTitle: exports.queryAllByTitle,
    findByTitle: exports.findByTitle,
    findAllByTitle: exports.findAllByTitle,
    getByDisplayValue: exports.getByDisplayValue,
    getAllByDisplayValue: exports.getAllByDisplayValue,
    queryByDisplayValue: exports.queryByDisplayValue,
    queryAllByDisplayValue: exports.queryAllByDisplayValue,
    findByDisplayValue: exports.findByDisplayValue,
    getByRole: exports.getByRole,
    getAllByRole: exports.getAllByRole,
    queryByRole: exports.queryByRole,
    queryAllByRole: exports.queryAllByRole,
    findByRole: exports.findByRole,
    findAllByRole: exports.findAllByRole,
    findAllByDisplayValue: exports.findAllByDisplayValue,
    getByTestId: exports.getByTestId,
    getAllByTestId: exports.getAllByTestId,
    queryByTestId: exports.queryByTestId,
    queryAllByTestId: exports.queryAllByTestId,
    findByTestId: exports.findByTestId,
    findAllByTestId: exports.findAllByTestId,
};
__exportStar(require("./types"), exports);
